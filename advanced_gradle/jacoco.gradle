apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.7"
}

// run ./gradlew clean createDebugCoverageReport jacocoTestReport
task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            'android/**/*.*',
            '**/Lambda$*.class',
            '**/Lambda.class',
            '**/*Lambda.class',
            '**/*Lambda*.class',
            '**/*Lambda*.*',
            '**/*Builder.*',
            '**/*_MembersInjector.class',
            '**/*_MembersInjector*.*',
            '**/*_*Factory*.*',
            '**/*Component*.*',
            '**/*Module*.*'
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    getSourceDirectories().from = files([mainSrc])
    getClassDirectories().from = files([debugTree])
    getExecutionData().from = fileTree(dir: project.rootDir, includes:
            ['**/*.exec' , '**/*.ec'])
}