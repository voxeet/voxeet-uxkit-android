buildscript {
    apply from: gradle.dolbyio.files.modules
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
    dependencies {
        classpath dolbyio.android.gradlePlugin
        classpath dolbyio.nexus.gradlePlugin
        classpath dolbyio.kotlin.gradlePlugin
        classpath dolbyio.sonarcube.gradlePlugin
        classpath dolbyio.license.gradlePlugin
        classpath dolbyio.gradle.versions.plugin
        classpath dolbyio.version.catalog.update.plugin
        classpath dolbyio.hilt.gradle
        classpath dolbyio.mkdocs.gradlePlugin
        classpath dolbyio.dokka.gradlePlugin
    }
}

plugins {
    alias(dolbyio.plugins.dokka)
    alias(dolbyio.plugins.publish.nexus)
}

def modules_sdk = [
        // main module
        'uxkit',
        // firebase support
        'uxkit-firebase',
        // in conference specific "presentation"
        'uxkit-exoplayer-support', 'uxkit-youtube', 'uxkit-screenshare',
        // plugins related to services and system info
        'uxkit-incoming-call', 'uxkit-self-managed-call', 'uxkit-system-service',
        // common module
        'uxkit-common',

]

ext {
    groupId = "io.dolby"

    pom = [
        description: "Dolby.io Communications APIs library module",
        inceptionYear: "${new Date().format("YYYY")}",
        url: "https://github.com/voxeet/voxeet-sdk-android-gradle",
        license: [
            name: 'MIT License',
            url: 'https://github.com/voxeet/voxeet-sdk-android-gradle/blob/main/LICENSE'
        ],
        developer: [
            id: 'dolbyio',
            name: 'Dolby.io',
            email: 'support@dolby.io'
        ],
        scm: [
            connection: 'scm:git:github.com/voxeet/voxeet-sdk-android-gradle.git',
            developerConnection: 'scm:git:ssh://github.com/voxeet/voxeet-sdk-android-gradle.git',
            url: 'https://github.com/voxeet/voxeet-sdk-android-gradle/tree/main'
        ]
    ]
}

apply from: "./uxkit.gradle"
apply from: "./sdk.gradle"

group = ext.groupId

nexusPublishing {
    repositories {
        sonatype {
            // override default urls as default are oss.sonatype.org
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven {
            url "https://android-sdk.voxeet.com/release"
            content {
                includeGroup "com.voxeet.sdk"
                //any other possible group with a new includeGroup line but as far as I remember I only created and set one group
            }
        }

        maven {
            url "https://android-sdk.voxeet.com/beta"
            content {
                includeGroup "com.voxeet.sdk" //same as above
            }
        }
    }
}

subprojects {
    task allDeps(type: DependencyReportTask) {}

    if (isSourcesModule(it)) {
        apply from: gradle.dolbyio.files.moduleSetup
    }
}


task cleanAll {
    dependsOn = modules_sdk.collect { ":${it}:clean" }
}

task assembleAll {
    dependsOn = modules_sdk.collect { ":${it}:assembleRelease" }
}

task licenseAll {
    dependsOn = modules_sdk.collect { ":${it}:licenseReleaseReport" }

    modules_sdk.collect { "${it}/src/main/assets" }
            .each { folder -> new File(folder).mkdirs() }

    modules_sdk.each { name ->
        def report = "${name}/build/reports/licenses/licenseReleaseReport.json"
        def new_report = "${name}/build/reports/licenses/${name}.json"
        new File(report).renameTo(new File(new_report))

        copy { from new_report into "${name}/src/main/assets/" }
    }
}

task installAll {
    dependsOn = modules_sdk.collect { ":${it}:publishToMavenLocal" }
}

task uploadAll {
    dependsOn = modules_sdk.collect { ":${it}:publish" }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
